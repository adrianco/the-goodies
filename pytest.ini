[tool:pytest]
minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --cov=src
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    --maxfail=3
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
norecursedirs = .git .tox dist build *.egg

# Test markers
markers =
    unit: Unit tests (fast, isolated, no external dependencies)
    integration: Integration tests (may use real database or network)
    performance: Performance benchmarks and load tests
    slow: Tests that take more than 1 second
    conflict: Conflict resolution specific tests
    db: Database-related tests
    swift_mock: Tests with mocked Swift/WildThing interfaces

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */conftest.py
    */__init__.py
    */migrations/*
    */config/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    # Standard exclusions
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract
    @abstractmethod
    
    # Defensive programming
    except ImportError
    except KeyError
    except AttributeError
    
    # Debug-only code
    if DEBUG:
    if debug:
    
    # Platform-specific code
    if sys.platform

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Pytest-benchmark settings
[tool:pytest:benchmark]
min_rounds = 5
min_time = 0.001
max_time = 1.0
calibration_precision = 10
warmup = True
warmup_iterations = 100000